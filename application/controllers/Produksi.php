<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Produksi extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produksi_model');
    }


    function verif()
    {
        if ($this->session->userdata('status') == "manager") {
            $data['produksi'] = $this->Produksi_model->d_verif();
            $data['_view'] = 'produksi/verif';
            $this->load->view('layouts/main', $data);
            // $produksi = $this->Produksi_model->d_verif($id_produksi);
            // $this->Produksi_model->verif();
        } else {
            $this->load->view('siapa');
        }
    }

    function verif_ok($id_produksi)
    {
        $produksi = $this->Produksi_model->get_produksi($id_produksi);

        // check if the produksi exists before trying to delete it
        if (isset($produksi['id_produksi'])) {
            $this->Produksi_model->verif_ok($id_produksi);
            redirect('produksi/verif');
        } else
            show_error('The produksi you are trying to delete does not exist.');
    }
    function tolak($id_produksi)
    {
        $produksi = $this->Produksi_model->get_produksi($id_produksi);

        // check if the produksi exists before trying to delete it
        if (isset($produksi['id_produksi'])) {
            $this->Produksi_model->delete_produksi($id_produksi);
            redirect('produksi/verif');
        } else
            show_error('The produksi you are trying to delete does not exist.');
    }

    /*
     * Listing of produksi
     */
    function index()
    {

        if ($this->session->userdata('username') == "") {
            redirect('app/login');
        }
        if ($this->session->userdata('status') == "manager") {
            $data['produksi'] = $this->Produksi_model->get_all_produksi();

            $data['_view'] = 'produksi/index';
            $this->load->view('layouts/main', $data);
        }
        if ($this->session->userdata('status') == "karyawan") {
            $this->load->library('form_validation');
            $data['produksi'] = $this->Produksi_model->prod();
            $data['produksi1'] = $this->Produksi_model->produdh();
            $this->form_validation->set_rules('id_pesanan', 'Id Pesanan', 'required');
            $this->form_validation->set_rules('id_karyawan', 'Id Karyawan', 'required');
            $this->form_validation->set_rules('potong_terselesaikan', 'Potong Terselesaikan', 'required|integer|greater_than[0]');
            $this->form_validation->set_rules('tanggal_produksi', 'Tanggal Produksi', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'id_pesanan' => $this->input->post('id_pesanan'),
                    'id_karyawan' => $this->input->post('id_karyawan'),
                    'nama' => $this->input->post('nama'),
                    'potong_terselesaikan' => $this->input->post('potong_terselesaikan'),
                    'tanggal_produksi' => $this->input->post('tanggal_produksi'),
                    'ket' => $this->input->post('ket'),
                );

                $produksi_id = $this->Produksi_model->add_produksi($params);
                redirect('produksi');
            } else {
                $this->load->model('Pesanan_model');
                $data['all_pesanan'] = $this->Pesanan_model->daftar_pesanan();

                $this->load->model('Karyawan_model');
                $data['all_karyawan'] = $this->Karyawan_model->get_all_karyawan();

                $data['_view'] = 'produksi/tambah';
                $this->load->view('krywn/main', $data);
            }
        }
    }
    /*
     * Adding a new produksi
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('id_pesanan', 'Id Pesanan', 'required');
        $this->form_validation->set_rules('id_karyawan', 'Id Karyawan', 'required');
        $this->form_validation->set_rules('potong_terselesaikan', 'Potong Terselesaikan', 'required|integer|greater_than[0]');
        $this->form_validation->set_rules('tanggal_produksi', 'Tanggal Produksi', 'required');
        $this->form_validation->set_rules('ket', 'Ket', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'id_pesanan' => $this->input->post('id_pesanan'),
                'id_karyawan' => $this->input->post('id_karyawan'),
                'nama' => $this->input->post('nama'),
                'potong_terselesaikan' => $this->input->post('potong_terselesaikan'),
                'tanggal_produksi' => $this->input->post('tanggal_produksi'),
                'ket' => $this->input->post('ket'),
            );

            $produksi_id = $this->Produksi_model->add_produksi($params);
            redirect('produksi/index');
        } else {
            $this->load->model('Pesanan_model');
            $data['all_pesanan'] = $this->Pesanan_model->get_all_pesanan();

            $this->load->model('Karyawan_model');
            $data['all_karyawan'] = $this->Karyawan_model->get_all_karyawan();

            $data['_view'] = 'produksi/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a produksi
     */
    function edit($id_produksi)
    {
        // check if the produksi exists before trying to edit it
        $data['produksi'] = $this->Produksi_model->get_produksi($id_produksi);

        if (isset($data['produksi']['id_produksi'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('id_pesanan', 'Id Pesanan', 'required');
            $this->form_validation->set_rules('id_karyawan', 'Id Karyawan', 'required');
            $this->form_validation->set_rules('potong_terselesaikan', 'Potong Terselesaikan', 'required|integer|greater_than[0]');
            $this->form_validation->set_rules('tanggal_produksi', 'Tanggal Produksi', 'required');
            $this->form_validation->set_rules('ket', 'ket', 'required');


            if ($this->form_validation->run()) {
                $params = array(
                    'id_pesanan' => $this->input->post('id_pesanan'),
                    'id_karyawan' => $this->input->post('id_karyawan'),
                    'nama' => $this->input->post('nama'),
                    'potong_terselesaikan' => $this->input->post('potong_terselesaikan'),
                    'tanggal_produksi' => $this->input->post('tanggal_produksi'),
                    'ket' => $this->input->post('ket'),
                );

                $this->Produksi_model->update_produksi($id_produksi, $params);
                redirect('produksi/index');
            } else {
                $this->load->model('Pesanan_model');
                $data['all_pesanan'] = $this->Pesanan_model->get_all_pesanan();

                $this->load->model('Karyawan_model');
                $data['all_karyawan'] = $this->Karyawan_model->get_all_karyawan();

                $data['_view'] = 'produksi/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The produksi you are trying to edit does not exist.');
    }

    /*
     * Deleting produksi
     */
    function remove($id_produksi)
    {
        $produksi = $this->Produksi_model->get_produksi($id_produksi);

        // check if the produksi exists before trying to delete it
        if (isset($produksi['id_produksi'])) {
            $this->Produksi_model->delete_produksi($id_produksi);
            redirect('produksi/index');
        } else
            show_error('The produksi you are trying to delete does not exist.');
    }
}
