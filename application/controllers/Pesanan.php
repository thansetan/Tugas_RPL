<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Pesanan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pesanan_model');
    }

    /*
     * Listing of pesanan
     */
    function index()
    {
        if ($this->session->userdata('username') == "") {
            redirect('app/login');
        } elseif ($this->session->userdata('status') == "manager") {
            $data['pesanan'] = $this->Pesanan_model->get_all_pesanan();

            $data['_view'] = 'pesanan/index';
            $this->load->view('layouts/main', $data);
        } elseif ($this->session->userdata('status') == "karyawan") {
            $data['pesanan'] = $this->Pesanan_model->daftar_pesanan();
            $data['_view'] = 'pesanan/daftar';
            $this->load->view('krywn/main', $data);
        } elseif ($this->session->userdata('status') == "pengembangan") {
            $data['pesanan'] = $this->Pesanan_model->daftar_pesanan();
            $data['_view'] = 'pesanan/daftar';
            $this->load->view('Pengembangan/main', $data);
        } else {
            $this->load->view('siapa');
        }
    }

    /*
     * Adding a new pesanan
     */
    function add()
    {
        if ($this->session->userdata('status') == "manager") {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('id_model', 'Id Model', 'required');
            $this->form_validation->set_rules('jumlah', 'Jumlah', 'required|integer|greater_than[0]');
            $this->form_validation->set_rules('tanggal_diambil', 'Tanggal Diambil', 'required');
            $this->form_validation->set_rules('nama', 'Nama', 'required');
            $this->form_validation->set_rules('upah_perpotong', 'Upah Perpotong', 'required');


            if ($this->form_validation->run()) {
                $params = array(
                    'id_model' => $this->input->post('id_model'),
                    'jumlah' => $this->input->post('jumlah'),
                    'tanggal_diambil' => $this->input->post('tanggal_diambil'),
                    'nama' => $this->input->post('nama'),
                    'upah_perpotong' => $this->input->post('upah_perpotong'),

                );

                $pesanan_id = $this->Pesanan_model->add_pesanan($params);
                redirect('pesanan/index');
            } else {
                $this->load->model('Model_model');
                $data['all_model'] = $this->Model_model->get_all_model();

                $data['_view'] = 'pesanan/add';
                $this->load->view('layouts/main', $data);
            }
        } elseif ($this->session->userdata('status') == "pengembangan") {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('id_model', 'Id Model', 'required');
            $this->form_validation->set_rules('jumlah', 'Jumlah', 'required|integer|greater_than[0]');
            $this->form_validation->set_rules('tanggal_diambil', 'Tanggal Diambil', 'required');
            $this->form_validation->set_rules('nama', 'Nama', 'required');
            $this->form_validation->set_rules('upah_perpotong', 'Upah Perpotong', 'required');


            if ($this->form_validation->run()) {
                $params = array(
                    'id_model' => $this->input->post('id_model'),
                    'jumlah' => $this->input->post('jumlah'),
                    'tanggal_diambil' => $this->input->post('tanggal_diambil'),
                    'nama' => $this->input->post('nama'),
                    'upah_perpotong' => $this->input->post('upah_perpotong'),

                );

                $pesanan_id = $this->Pesanan_model->add_pesanan($params);
                redirect('pesanan/index');
            } else {
                $this->load->model('Model_model');
                $data['all_model'] = $this->Model_model->get_all_model();

                $data['_view'] = 'pesanan/add';
                $this->load->view('Pengembangan/main', $data);
            }
        } else {
            $this->load->view('siapa');
        }
    }

    /*
     * Editing a pesanan
     */
    function edit($id_pesanan)
    {
        // check if the pesanan exists before trying to edit it
        $data['pesanan'] = $this->Pesanan_model->get_pesanan($id_pesanan);

        if (isset($data['pesanan']['id_pesanan'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('id_model', 'Id Model', 'required');
            $this->form_validation->set_rules('jumlah', 'Jumlah', 'required|integer|greater_than[0]');
            $this->form_validation->set_rules('tanggal_diambil', 'Tanggal Diambil', 'required');
            $this->form_validation->set_rules('nama', 'Nama', 'required');
            $this->form_validation->set_rules('upah_perpotong', 'Upah Perpotong', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'id_model' => $this->input->post('id_model'),
                    'jumlah' => $this->input->post('jumlah'),
                    'tanggal_diambil' => $this->input->post('tanggal_diambil'),
                    'nama' => $this->input->post('nama'),
                    'upah_perpotong' => $this->input->post('upah_perpotong'),
                );

                $this->Pesanan_model->update_pesanan($id_pesanan, $params);
                redirect('pesanan/index');
            } else {
                $this->load->model('Model_model');
                $data['all_model'] = $this->Model_model->get_all_model();

                $data['_view'] = 'pesanan/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The pesanan you are trying to edit does not exist.');
    }

    /*
     * Deleting pesanan
     */
    function remove($id_pesanan)
    {
        $pesanan = $this->Pesanan_model->get_pesanan($id_pesanan);

        // check if the pesanan exists before trying to delete it
        if (isset($pesanan['id_pesanan'])) {
            $this->Pesanan_model->delete_pesanan($id_pesanan);
            redirect('pesanan/index');
        } else
            show_error('The pesanan you are trying to delete does not exist.');
    }
}
